{"version":3,"sources":["images/tmdb_logo.svg","images/react-movie-logo.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","components/Hero/Hero.styles.js","components/Hero/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","components/SearchBar/Search.styles.js","images/search-icon.svg","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","API.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","helpers.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","hooks/useMovieFetch.js","components/Movie.js","components/NotFound.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumb","movieId","clickable","Spinner","SearchMovie","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","onChange","event","currentTarget","value","placeholder","button","Button","callback","onClick","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","initialState","results","total_pages","total_results","UseHomeFetch","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","prev","Home","Hero","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrumb","backdrop","MovieInfo","noImage","className","vote_average","directors","length","director","name","credit_id","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","MovieInfoBar","budget","revenue","Actor","actor","character","profile_path","useMovieFetch","useCallback","credits","crew","filter","member","job","actors","cast","sessionState","stateName","sessionStorage","getItem","parse","isPersistedState","setItem","Movie","useParams","console","log","runtime","NotFound","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cfa27ea1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tmdb_logo.e7029961.svg\";","export default __webpack_public_path__ + \"static/media/react-movie-logo.35f4d399.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background: var(--darkGrey);\r\n  padding: 0, 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  max-width: var(--maxWidth);\r\n  padding: 20px 0;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n  width: 200px;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    width: 150px;\r\n  }\r\n`;\r\n\r\nexport const TMDBLogoImg = styled.img`\r\n  width: 100px;\r\n\r\n  @media screen and (max-width: 500px) {\r\n    width: 80px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport TMDBLogo from \"../../images/tmdb_logo.svg\";\r\nimport RMDBLogo from \"../../images/react-movie-logo.svg\";\r\n\r\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from \"./Header.styles\";\r\n\r\nconst Header = () => (\r\n  <Wrapper>\r\n    <Content>\r\n      <Link to=\"/\">\r\n        <LogoImg src={RMDBLogo} alt=\"ardb-logo\" />\r\n      </Link>\r\n      <TMDBLogoImg src={TMDBLogo} alt=\"tmdb-logo\" />\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nexport default Header;\r\n","// Configuration for TMDB API\r\n// Read more about the API here: https://developers.themoviedb.org/\r\n\r\nconst API_URL = \"https://api.themoviedb.org/3/\";\r\n// const API_KEY = toString(process.env.REACT_APP_API_KEY);\r\nconst API_KEY = \"8e82450ba513f4fb3048a005f7da1ffb\";\r\n\r\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\r\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\r\n// For login and voting\r\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\r\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\r\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\r\n\r\nconst IMAGE_BASE_URL = \"http://image.tmdb.org/t/p/\";\r\n// Sizes: w300, w780, w1280, original\r\nconst BACKDROP_SIZE = \"w1280\";\r\n// w92, w154, w185, w342, w500, w780, original\r\nconst POSTER_SIZE = \"w780\";\r\n\r\nexport {\r\n  SEARCH_BASE_URL,\r\n  POPULAR_BASE_URL,\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  BACKDROP_SIZE,\r\n  POSTER_SIZE,\r\n  REQUEST_TOKEN_URL,\r\n  LOGIN_URL,\r\n  SESSION_ID_URL,\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background: linear-gradient(\r\n      to bottom,\r\n      rgba(0, 0, 0, 0) 41%,\r\n      rgba(0, 0, 0, 0.65) 100%\r\n    ),\r\n    url(${({ image }) => image}), var(--darkGrey);\r\n\r\n  background-size: 100%, cover;\r\n  background-position: center;\r\n  height: 600px;\r\n  animation: animationHeroImage 1s;\r\n  @keyframes animationHeroImage {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  padding: 20px;\r\n  max-width: var(--maxWidth);\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  z-index: 100;\r\n  max-width: 700px;\r\n  position: absolute;\r\n  bottom: 100px;\r\n  margin-right: 20px;\r\n  min-height: 100px;\r\n  color: var(--white);\r\n\r\n  h1 {\r\n    font-size: var(--fontSuperBig);\r\n\r\n    @media screen and (max-width: 720px) {\r\n      font-size: (--fontBig);\r\n    }\r\n  }\r\n\r\n  p {\r\n    font-size: var(--fontMed);\r\n\r\n    @media screen and (max-width: 720px) {\r\n      font-size: var(--fontSmall);\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Wrapper, Content, Text } from \"./Hero.styles\";\r\n\r\nconst HeroImage = ({ image, title, text }) => (\r\n  <Wrapper image={image}>\r\n    <Content>\r\n      <Text>\r\n        <h1>{title}</h1>\r\n        <p>{text}</p>\r\n      </Text>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nHeroImage.propTypes = {\r\n  image: PropTypes.string,\r\n  title: PropTypes.string,\r\n  text: PropTypes.string,\r\n};\r\n\r\nexport default HeroImage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  max-width: var(--maxWidth);\r\n  /* max-width: 1280px; */\r\n  margin: auto;\r\n  padding: 0, 20px;\r\n  margin-top: 2rem;\r\n\r\n  h1 {\r\n    color: var(--medGrey);\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  h1 {\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n`;\r\nexport const Content = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  grid-gap: 2rem;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\n//  Styles\r\nimport { Wrapper, Content } from \"./Grid.styles\";\r\n\r\nconst Grid = ({ header, children }) => (\r\n  <Wrapper>\r\n    <h1>{header}</h1>\r\n    <Content>{children}</Content>\r\n  </Wrapper>\r\n);\r\n\r\nGrid.propTypes = { header: PropTypes.string };\r\n\r\nexport default Grid;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  max-width: 720px;\r\n  transition: all 0.3s;\r\n  object-fit: cover;\r\n  border-radius: 20px;\r\n  animation: animationThumb 0.5s;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n\r\n  @keyframes animationThumb {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//  Styles\r\nimport { Image } from \"./Thumb.styles\";\r\n\r\nconst Thumb = ({ image, movieId, clickable }) => (\r\n  <div>\r\n    {clickable ? (\r\n      <Link to={`/${movieId}`}>\r\n        <Image src={image} alt=\"movie-thumb\" />\r\n      </Link>\r\n    ) : (\r\n      <Image src={image} alt=\"movie-thumb\" />\r\n    )}\r\n  </div>\r\n);\r\n\r\nThumb.propTypes = {\r\n  image: PropTypes.string,\r\n  movieId: PropTypes.number,\r\n  clickable: PropTypes.bool,\r\n};\r\n\r\nexport default Thumb;\r\n","import { Spinner } from \"./Spinner.styles\";\r\n\r\nexport default Spinner;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Spinner = styled.div`\r\n  border: 5px solid var(--lightGrey);\r\n  border-top: 5px solid var(--medGrey);\r\n  border-radius: 50%;\r\n  width: 50px;\r\n  height: 50px;\r\n  animation: spin 0.8s linear infinite;\r\n  margin: 20px auto;\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  background: var(--darkGrey);\r\n  height: 100px;\r\n  padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  max-width: var(--maxWidth);\r\n  width: 100%;\r\n  position: relative;\r\n  margin: 0 auto;\r\n  background: var(--medGrey);\r\n  border-radius: 40px;\r\n  height: 55px;\r\n  color: var(--white);\r\n\r\n  /*  Set icon and input */\r\n\r\n  img {\r\n    position: absolute;\r\n    width: 30px;\r\n    left: 15px;\r\n    top: 14px;\r\n  }\r\n\r\n  input {\r\n    font-size: var(--fontBig);\r\n    position: absolute;\r\n    left: 50px;\r\n    top: 6px;\r\n    margin: 8px, 0;\r\n    padding: 0, 0, 0, 60px;\r\n    border: 0;\r\n    width: 95%;\r\n    background: transparent;\r\n    height: 40px;\r\n    color: var(--white);\r\n\r\n    :focus {\r\n      outline: none;\r\n    }\r\n\r\n    @media screen and (max-width: 720px) {\r\n      font-size: 28px;\r\n    }\r\n  }\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/search-icon.bb4c697f.svg\";","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\n//  Styles\r\nimport { Wrapper, Content } from \"./Search.styles\";\r\n\r\n//  Search icon\r\nimport searchIcon from \"../../images/search-icon.svg\";\r\n\r\nconst SearchMovie = ({ setSearchTerm }) => {\r\n  const [state, setState] = useState(\"\");\r\n\r\n  const initial = useRef(true);\r\n\r\n  //  initial current is meaning initial with value now\r\n\r\n  useEffect(() => {\r\n    if (initial.current) {\r\n      initial.current = false;\r\n      return;\r\n    }\r\n    const timer = setTimeout(() => {\r\n      setSearchTerm(state);\r\n    }, 500);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [setSearchTerm, state]);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Content>\r\n        <img src={searchIcon} alt=\"search-movie\" />\r\n        <input\r\n          type=\"text\"\r\n          onChange={(event) => setState(event.currentTarget.value)}\r\n          value={state}\r\n          placeholder=\"Search Movie\"\r\n        />\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nSearchMovie.propTypes = {\r\n  setSearchTerm: PropTypes.func,\r\n};\r\n\r\nexport default SearchMovie;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.button`\r\n  display: block;\r\n  width: 25%;\r\n  background: var(--darkGrey);\r\n  color: var(--white);\r\n  border: 0;\r\n  border-radius: 30px;\r\n  margin: auto;\r\n  padding: 12px;\r\n  max-width: var(--maxWidth);\r\n  font-size: var(--fontBig);\r\n  margin-top: 20px;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Wrapper } from \"./Button.styles\";\r\n\r\nconst Button = ({ text, callback }) => (\r\n  <Wrapper type=\"button\" onClick={callback}>\r\n    {text}\r\n  </Wrapper>\r\n);\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  callback: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import {\r\n  SEARCH_BASE_URL,\r\n  POPULAR_BASE_URL,\r\n  API_URL,\r\n  API_KEY,\r\n  REQUEST_TOKEN_URL,\r\n  LOGIN_URL,\r\n  SESSION_ID_URL,\r\n} from \"./config\";\r\n\r\nconst defaultConfig = {\r\n  method: \"POST\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nconst apiSettings = {\r\n  fetchMovies: async (searchTerm, page) => {\r\n    const endpoint = searchTerm\r\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\r\n      : `${POPULAR_BASE_URL}&page=${page}`;\r\n    return await (await fetch(endpoint)).json();\r\n  },\r\n  fetchMovie: async (movieId) => {\r\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\r\n    return await (await fetch(endpoint)).json();\r\n  },\r\n  fetchCredits: async (movieId) => {\r\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n    return await (await fetch(creditsEndpoint)).json();\r\n  },\r\n  // Bonus material below for login\r\n  getRequestToken: async () => {\r\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\r\n    return reqToken.request_token;\r\n  },\r\n  authenticate: async (requestToken, username, password) => {\r\n    const bodyData = {\r\n      username,\r\n      password,\r\n      request_token: requestToken,\r\n    };\r\n    // First authenticate the requestToken\r\n    const data = await (\r\n      await fetch(LOGIN_URL, {\r\n        ...defaultConfig,\r\n        body: JSON.stringify(bodyData),\r\n      })\r\n    ).json();\r\n    // Then get the sessionId with the requestToken\r\n    if (data.success) {\r\n      const sessionId = await (\r\n        await fetch(SESSION_ID_URL, {\r\n          ...defaultConfig,\r\n          body: JSON.stringify({ request_token: requestToken }),\r\n        })\r\n      ).json();\r\n      return sessionId;\r\n    }\r\n  },\r\n  rateMovie: async (sessionId, movieId, value) => {\r\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\r\n\r\n    const rating = await (\r\n      await fetch(endpoint, {\r\n        ...defaultConfig,\r\n        body: JSON.stringify({ value }),\r\n      })\r\n    ).json();\r\n\r\n    return rating;\r\n  },\r\n};\r\n\r\nexport default apiSettings;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport API from \"../API\";\r\n\r\nconst initialState = {\r\n  page: 0,\r\n  results: [],\r\n  total_pages: 0,\r\n  total_results: 0,\r\n};\r\n\r\nconst UseHomeFetch = () => {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [state, setState] = useState(initialState);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n\r\n  //  is value\r\n  // const state = useState();\r\n  // [stateValue, setter for the state]\r\n  // state[0],\r\n  // state[1]\r\n\r\n  const fetchMovies = async (page, searchTerm = \"\") => {\r\n    try {\r\n      setError(false);\r\n      setLoading(false);\r\n\r\n      const movies = await API.fetchMovies(searchTerm, page);\r\n\r\n      setState((prev) => {\r\n        return {\r\n          ...prev,\r\n          page: movies.page,\r\n          results:\r\n            page > 1\r\n              ? [...prev.results, ...movies.results]\r\n              : [...movies.results],\r\n          total_pages: movies.total_pages,\r\n          total_results: movies.total_results,\r\n        };\r\n      });\r\n\r\n      // setState(movies);\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n  };\r\n\r\n  //  initial render\r\n  useEffect(() => {\r\n    setState(initialState);\r\n    fetchMovies(1, searchTerm);\r\n  }, [searchTerm]);\r\n\r\n  // isLoadingMore\r\n  useEffect(() => {\r\n    if (!isLoadingMore) return;\r\n    fetchMovies(state.page + 1, searchTerm);\r\n    setIsLoadingMore(false);\r\n  }, [isLoadingMore, searchTerm, state.page]);\r\n\r\n  return { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore };\r\n};\r\n\r\nexport default UseHomeFetch;\r\n","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React, { useState, useEffect } from \"react\";\r\n\r\n//  Config\r\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config\";\r\n\r\n//  Components\r\nimport HeroImage from \"./Hero\";\r\nimport Grid from \"./Grid\";\r\nimport Thumb from \"./Thumb\";\r\nimport Spinner from \"./Spinner\";\r\nimport SearchMovie from \"./SearchBar\";\r\nimport Button from \"./Button\";\r\n\r\n//  Hooks\r\nimport UseHomeFetch from \"../hooks/useHomeFetch\";\r\n//  Image\r\nimport NoImage from \"../images/no_image.jpg\";\r\n\r\n// const IMAGE_BASE_URL =\r\n//   \"https://image.tmdb.org/t/p/original/iQFcwSGbZXMkeyKrxbPnwnRo5fl.jpg\";\r\n// const BACKDROP_SIZE = \"1280\";\r\n\r\nconst Home = () => {\r\n  const { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore } =\r\n    UseHomeFetch();\r\n\r\n  if (error) return <div>Something went wrong, Please try again.</div>;\r\n\r\n  return (\r\n    <>\r\n      {!searchTerm && state.results[0] ? (\r\n        <HeroImage\r\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\r\n          title={state.results[0].original_title}\r\n          text={state.results[0].overview}\r\n        />\r\n      ) : null}\r\n      <SearchMovie setSearchTerm={setSearchTerm} />\r\n      <Grid header={searchTerm ? \"Search Result\" : \"Popular Movies\"}>\r\n        {state.results.map((movie) => (\r\n          <Thumb\r\n            key={movie.id}\r\n            //  Clickable is a true automatically\r\n            clickable\r\n            image={\r\n              movie.poster_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                : NoImage\r\n            }\r\n            movieId={movie.id}\r\n          />\r\n        ))}\r\n      </Grid>\r\n      {loading && <Spinner />}\r\n      {state.page < state.total_pages && !loading && (\r\n        <Button text=\"Load More\" callback={() => setIsLoadingMore(true)} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: var(--medGrey);\r\n  height: 70px;\r\n\r\n  color: var(--white);\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  max-width: var(--maxWidth);\r\n  width: 100%;\r\n  color: var(--white);\r\n  font-size: (--fontBig);\r\n  margin: 0 7px;\r\n  padding: 0 20px;\r\n\r\n  span {\r\n    font-size: var(--fontMed);\r\n    color: var(--white);\r\n    padding-right: 10px;\r\n\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontSmall);\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\n//  Styles\r\nimport { Wrapper, Content } from \"./BreadCrumb.styles\";\r\n\r\nconst BreadCrumb = ({ title }) => (\r\n  <Wrapper>\r\n    <Content>\r\n      <Link to=\"/\">\r\n        <span>Home</span>\r\n      </Link>\r\n      <span>|</span>\r\n      <span>{title}</span>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nBreadCrumb.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default BreadCrumb;\r\n","import styled from \"styled-components\";\r\n\r\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background: ${({ backdrop }) =>\r\n    backdrop ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop}) ` : \"#000\"};\r\n  background-size: cover;\r\n  background-position: center;\r\n  padding: 40px 20px;\r\n  animation: animateMovieInfo 1s;\r\n\r\n  @keyframes animateMovieInfo {\r\n    from {\r\n      opacity: 0;\r\n    }\r\n    to {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  max-width: var(--maxWidth);\r\n  width: 100%;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  border-radius: 20px;\r\n  margin: 0 auto;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n    max-height: none;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.div`\r\n  width: 100%;\r\n  padding: 20px 40px;\r\n  color: var(--white);\r\n  overflow: hidden;\r\n  /* margin: 20px; */\r\n\r\n  .rating-directors {\r\n    margin-top: 20px;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n  }\r\n  .score {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 35px;\r\n    height: 35px;\r\n    background-color: var(--white);\r\n    font-weight: 800;\r\n    border-radius: 50%;\r\n    color: var(--darkGrey);\r\n    margin: 0;\r\n  }\r\n\r\n  .directors {\r\n    margin: 0 0 0 40px;\r\n\r\n    p {\r\n      margin: 0;\r\n    }\r\n  }\r\n\r\n  h1 {\r\n    @media screen and (max-width: 768px) {\r\n      font-size: var(--fontBig);\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\n//  Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\r\n\r\n//  Styles\r\nimport { Wrapper, Content, Text } from \"./MovieInfo.styles\";\r\n\r\n//  components\r\nimport Thumb from \"../Thumb\";\r\n\r\n//  No image\r\nimport noImage from \"../../images/no_image.jpg\";\r\n\r\nconst MovieInfo = ({ movie }) => (\r\n  <Wrapper backdrop={movie.backdrop_path}>\r\n    <Content>\r\n      <Thumb\r\n        image={\r\n          movie.poster_path\r\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n            : noImage\r\n        }\r\n        clickable={false}\r\n        alt=\"movie-thumb\"\r\n      />\r\n\r\n      <Text>\r\n        <h1>{movie.title}</h1>\r\n        <h3>PLOT</h3>\r\n        <p>{movie.overview}</p>\r\n        <div className=\"rating-directors\">\r\n          <div>\r\n            <h3>RATING</h3>\r\n            <div className=\"score\">{movie.vote_average}</div>\r\n          </div>\r\n\r\n          <div className=\"director\">\r\n            <h3>DIRECTOR{(movie?.directors?.length || []) > 1 ? \"S\" : \"\"}</h3>\r\n            {(movie.directors || []).map((director) => (\r\n              <p key={director.credit_id}>{director.name}</p>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </Text>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nMovieInfo.propTypes = {\r\n  movie: PropTypes.object,\r\n};\r\n\r\nexport default MovieInfo;\r\n","// Convert time to hours and minutes\r\nexport const calcTime = (time) => {\r\n  const hours = Math.floor(time / 60);\r\n  const mins = time % 60;\r\n  return `${hours}h ${mins}m`;\r\n};\r\n// Convert a number to money formatting\r\nexport const convertMoney = (money) => {\r\n  const formatter = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n    minimumFractionDigits: 0,\r\n  });\r\n  return formatter.format(money);\r\n};\r\n\r\n//  Add func session storage\r\nexport const isPersistedState = (stateName) => {\r\n  const sessionState = sessionStorage.getItem(stateName);\r\n\r\n  return sessionState && JSON.parse(sessionState);\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  background: var(--darkGrey);\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0 20px;\r\n  min-height: 100px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  display: flex;\r\n  max-width: var(--maxWidth);\r\n  width: 100%;\r\n  margin: 0 auto;\r\n\r\n  .column {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background: var(--medGrey);\r\n    padding: 10px;\r\n    flex: 1;\r\n    border-radius: 20px;\r\n    margin: 0 20px;\r\n\r\n    :first-child {\r\n      margin-left: 0;\r\n    }\r\n\r\n    :last-child {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    display: block;\r\n\r\n    .column {\r\n      margin: 20px 0;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\n// Helpers\r\nimport { calcTime, convertMoney } from \"../../helpers\";\r\n\r\n// Styles\r\nimport { Wrapper, Content } from \"./MovieInfoBar.styles\";\r\n\r\nconst MovieInfoBar = ({ time, budget, revenue }) => (\r\n  <Wrapper>\r\n    <Content>\r\n      <div className=\"column\">\r\n        <p>Running Time : {calcTime(time)}</p>\r\n      </div>\r\n      <div className=\"column\">\r\n        <p>Budget : {convertMoney(budget)}</p>\r\n      </div>\r\n      <div className=\"column\">\r\n        <p>Revenue : {convertMoney(revenue)}</p>\r\n      </div>\r\n    </Content>\r\n  </Wrapper>\r\n);\r\n\r\nMovieInfoBar.propTypes = {\r\n  time: PropTypes.number,\r\n  budget: PropTypes.number,\r\n  revenue: PropTypes.number,\r\n};\r\n\r\nexport default MovieInfoBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  background: var(--darkGrey);\r\n  color: var(--white);\r\n  border-radius: 20px;\r\n  padding: 5px;\r\n  text-align: center;\r\n\r\n  h3 {\r\n    margin: 10px 0 0 0;\r\n  }\r\n\r\n  p {\r\n    margin: 5px 0;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  display: block;\r\n  width: 100%;\r\n  height: 200px;\r\n  object-fit: cover;\r\n  border-radius: 15px;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n//  Styles\r\nimport { Wrapper, Image } from \"./Actor.styles\";\r\n\r\nconst Actor = ({ actor, character, profile_path }) => (\r\n  <Wrapper>\r\n    <Image src={profile_path} alt=\"actor-thumb\" />\r\n    <h2>{actor}</h2>\r\n    <p>{character}</p>\r\n  </Wrapper>\r\n);\r\n\r\n//  Prop type for  validate type of props\r\nActor.propTypes = {\r\n  actor: PropTypes.string,\r\n  character: PropTypes.string,\r\n  profile_path: PropTypes.string,\r\n};\r\n\r\nexport default Actor;\r\n","import { useState, useEffect, useCallback } from \"react\";\r\n\r\n//  API\r\nimport API from \"../API\";\r\n\r\n// Helpers\r\nimport { isPersistedState } from \"../helpers\";\r\n\r\nconst useMovieFetch = (movieId) => {\r\n  const [state, setState] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  const fetchMovie = useCallback(async () => {\r\n    try {\r\n      setError(false);\r\n      setLoading(false);\r\n\r\n      const movie = await API.fetchMovie(movieId);\r\n      const credits = await API.fetchCredits(movieId);\r\n\r\n      //  Get directors\r\n      const directors = credits.crew.filter(\r\n        (member) => member.job === \"Director\"\r\n      );\r\n\r\n      setState({\r\n        ...movie,\r\n        actors: credits.cast,\r\n        directors,\r\n      });\r\n    } catch (error) {\r\n      setError(true);\r\n    }\r\n  }, [movieId]);\r\n\r\n  useEffect(() => {\r\n    const sessionState = isPersistedState(movieId);\r\n\r\n    if (sessionState) {\r\n      setState(sessionState);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    fetchMovie();\r\n  }, [movieId, fetchMovie]);\r\n\r\n  //  Write to session storage\r\n  useEffect(() => {\r\n    sessionStorage.setItem(movieId, JSON.stringify(state));\r\n  }, [movieId, state]);\r\n\r\n  return { state, loading, error };\r\n};\r\n\r\nexport default useMovieFetch;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n//  Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../config\";\r\n\r\n//  Components\r\nimport Grid from \"./Grid\";\r\nimport Spinner from \"./Spinner\";\r\nimport BreadCrumb from \"./BreadCrumb\";\r\nimport MovieInfo from \"./MovieInfo\";\r\nimport MovieInfoBar from \"./MovieInfoBar\";\r\nimport Actor from \"./Actor\";\r\n\r\n//  Hook\r\nimport useMovieFetch from \"../hooks/useMovieFetch\";\r\n//  No image\r\nimport NoImage from \"../images/no_image.jpg\";\r\n\r\nconst Movie = () => {\r\n  const { movieId } = useParams();\r\n  // const movie_id = parseInt(movieId);\r\n  const { state: movie, loading, error } = useMovieFetch(movieId);\r\n\r\n  console.log(movie);\r\n\r\n  if (error) return <div>Something went wrong...</div>;\r\n  if (loading) return <Spinner />;\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumb title={movie.original_title} />\r\n      <MovieInfo movie={movie} />\r\n      <MovieInfoBar\r\n        budget={movie.budget}\r\n        time={movie.runtime}\r\n        revenue={movie.revenue}\r\n      />\r\n      <Grid header=\"Actors\">\r\n        {(movie.actors || []).map((actor) => (\r\n          <Actor\r\n            key={actor.id}\r\n            actor={actor.name}\r\n            character={actor.character}\r\n            profile_path={\r\n              actor.profile_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n                : NoImage\r\n            }\r\n          />\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => <div>NotFound</div>;\r\n\r\nexport default NotFound;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n:root {\r\n  --maxWidth : 1280px;\r\n  --white : #fff;\r\n  --lightGrey : #eee;\r\n  --medGrey : #353535;\r\n  --darkGrey : #1c1c1c;\r\n\r\n  --fontSuperBig : 2.5rem;\r\n  --fontBig : 1.5rem;\r\n  --fontMed : 1.2rem;\r\n  --fontSmall : 1rem;\r\n}\r\n\r\n* {\r\n  margin: 0;\r\n  font-family: 'Abel', sans-serif;\r\n}\r\n\r\nbody {\r\n  margin : 0;\r\n  padding : 0;\r\n\r\n  h1 {\r\n    font-size : 2rem;\r\n    font-weight: 600;\r\n    color:var(--white);\r\n  }\r\n\r\n  h3{\r\n    font-size: 1.1rem;\r\n    font-weight: 600;\r\n  }\r\n\r\n  p {\r\n    font-size :1rem;\r\n    color: var(--white);\r\n  }\r\n}\r\n`;\r\n","import React from \"react\";\r\n\r\n// Routing\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\n\r\n//  Components\r\nimport Header from \"./components/Header\";\r\nimport Home from \"./components/Home\";\r\nimport Movie from \"./components/Movie\";\r\nimport NotFound from \"./components/NotFound\";\r\n//  import Test from \"./components/Test\";\r\n\r\n// Styles\r\nimport { GlobalStyle } from \"./GlobalStyle\";\r\n\r\nconst App = () => (\r\n  <>\r\n    <Router>\r\n      <Header />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/:movieId\" element={<Movie />} />\r\n        <Route path=\"/*\" element={<NotFound />} />\r\n      </Routes>\r\n    </Router>\r\n    <GlobalStyle />\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}